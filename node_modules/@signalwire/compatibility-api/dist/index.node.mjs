// src/index.ts
import twilio2 from "twilio";

// src/helpers.ts
import twilio from "twilio";
function Reject(reject) {
  this.reject = reject;
  this._propertyName = "reject";
}
Reject.prototype = Object.create(twilio.twiml.FaxResponse.prototype);
Reject.prototype.constructor = "Reject";
var getHost = (opts = {}) => {
  const { signalwireSpaceUrl } = opts;
  if (signalwireSpaceUrl) {
    return signalwireSpaceUrl;
  }
  const { SIGNALWIRE_SPACE_URL, SIGNALWIRE_API_HOSTNAME } = process.env;
  if (SIGNALWIRE_SPACE_URL) {
    return SIGNALWIRE_SPACE_URL;
  }
  if (SIGNALWIRE_API_HOSTNAME) {
    return SIGNALWIRE_API_HOSTNAME;
  }
  throw new Error('SignalWire Space URL is not configured.\nEnter your SignalWire Space domain via the SIGNALWIRE_SPACE_URL or SIGNALWIRE_API_HOSTNAME environment variables, or specifying the property "signalwireSpaceUrl" in the init options.');
};

// src/index.ts
twilio2.twiml.FaxResponse.prototype.reject = function(attributes) {
  return new Reject(this.response.ele("Reject", attributes));
};
var RestClient = function(username, token, opts) {
  const host = getHost(opts);
  const client = twilio2("AC" + username, token, opts);
  client.username = username;
  client.accountSid = username;
  client.password = token;
  client.api.baseUrl = `https://${host}`;
  client.fax.baseUrl = `https://${host}`;
  client.fax.v1._version = `2010-04-01/Accounts/${client.accountSid}`;
  return client;
};
var properties = Object.getOwnPropertyNames(twilio2);
for (let i = 0; i < properties.length; i++) {
  const newProp = properties[i] === "twiml" ? "LaML" : properties[i];
  Object.defineProperty(RestClient, newProp, {
    value: twilio2[properties[i]]
  });
}
export {
  RestClient
};
//# sourceMappingURL=index.node.mjs.map
