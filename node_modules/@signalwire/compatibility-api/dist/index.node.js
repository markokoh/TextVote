var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  RestClient: () => RestClient
});
module.exports = __toCommonJS(src_exports);
var import_twilio2 = __toESM(require("twilio"));

// src/helpers.ts
var import_twilio = __toESM(require("twilio"));
function Reject(reject) {
  this.reject = reject;
  this._propertyName = "reject";
}
Reject.prototype = Object.create(import_twilio.default.twiml.FaxResponse.prototype);
Reject.prototype.constructor = "Reject";
var getHost = (opts = {}) => {
  const { signalwireSpaceUrl } = opts;
  if (signalwireSpaceUrl) {
    return signalwireSpaceUrl;
  }
  const { SIGNALWIRE_SPACE_URL, SIGNALWIRE_API_HOSTNAME } = process.env;
  if (SIGNALWIRE_SPACE_URL) {
    return SIGNALWIRE_SPACE_URL;
  }
  if (SIGNALWIRE_API_HOSTNAME) {
    return SIGNALWIRE_API_HOSTNAME;
  }
  throw new Error('SignalWire Space URL is not configured.\nEnter your SignalWire Space domain via the SIGNALWIRE_SPACE_URL or SIGNALWIRE_API_HOSTNAME environment variables, or specifying the property "signalwireSpaceUrl" in the init options.');
};

// src/index.ts
import_twilio2.default.twiml.FaxResponse.prototype.reject = function(attributes) {
  return new Reject(this.response.ele("Reject", attributes));
};
var RestClient = function(username, token, opts) {
  const host = getHost(opts);
  const client = (0, import_twilio2.default)("AC" + username, token, opts);
  client.username = username;
  client.accountSid = username;
  client.password = token;
  client.api.baseUrl = `https://${host}`;
  client.fax.baseUrl = `https://${host}`;
  client.fax.v1._version = `2010-04-01/Accounts/${client.accountSid}`;
  return client;
};
var properties = Object.getOwnPropertyNames(import_twilio2.default);
for (let i = 0; i < properties.length; i++) {
  const newProp = properties[i] === "twiml" ? "LaML" : properties[i];
  Object.defineProperty(RestClient, newProp, {
    value: import_twilio2.default[properties[i]]
  });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  RestClient
});
//# sourceMappingURL=index.node.js.map
